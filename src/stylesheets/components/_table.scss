$color-row-hover: #EEF4FC;
$color-header: 	#f1f1f1;
$color-row: #FFFFFF;

$border-row-hover: 1px solid #5596E6;
$border-row: 1px solid #D6D7D9; 

$row-height-compact: 24px;
$row-height-short: 32px;
$row-height-default: 48px;
$row-height-tall: 64px;

.dt-container {
    display: flex;
    flex-direction: column;
    width: 100%;
}

.dt-menu {
    display: flex;
    height: 50px;
}

.dt-selected-rows-menu {
    width: 100%;
    display: flex;    
    background: $color-primary;
}

.dt-default-menu {
    width: 100%;
    display: flex;  
}

.dt-button {
    align-self: center; // center vertically   
    background: inherit;     
}

.dt-selected-items-counter {
    margin-left: auto; // adjust to the right
    align-self: center; // center vertically
    color: $color-white;
}

.dt-filter {
    margin-right: auto; // adjust to the left
    margin-left: 20px;
    height: 30px;
    align-self: center;
}

.dt-checkbox {
    position: initial;
    left: 0px;
    -webkit-appearance: checkbox;
    height: auto;
    width: auto;
}

.dt-button-img {
    width: 16px;
    height: 16px;
    fill-rule: evenodd;
}

.dt-hidden {
    display: none;
}

.dt-table {
    margin: 0;
    width: 100%;
}

.dt-sort-button {
    background: none;
    color: inherit;
    white-space: nowrap;    
}

.dt-sort-button-svg {
    width: 10px;
    height: 6px;
    fill-rule: evenodd;
    fill: black;
    margin-bottom: 2px;
}

.dt-svg-rotate {
    transform: rotate(180deg);
}

.dt-expand-button {
    width: fit-content;
    height: fit-content;
    margin: 0;
    padding: 0;
    display: flex;
    background: transparent;
}

.dt-expand-button-svg {
    width: 8px;
    height: 12px;
}

.dt-svg-rotate90 {
    transform: rotate(90deg);
}

.dk-table {
    cursor: pointer;    

    // It is necessary to set 1px transprarent border in order to prevent table moving when hovering over row
    td, th {
        border: 1px transparent;
        padding: 0px 20px;
    }

    &.bordered {
        tr {
            border: $border-row;
        }
    }

    &.borderless {
        tr {
            border: $border-row;            
            border-left-color: transparent;
            border-right-color: transparent;
        }
    }

    &.zebra {
        tr:nth-child(even) {
            td {
                background-color: $color-header;
            }
        }
        
        tbody > tr:not(:last-child) {
            border-top-color: transparent;
            border-bottom-color: transparent;
        }        

        &.borderless {
            tr,th {
                border-color: transparent;
            }
        }
    }

    th {
        background-color: $color-header;
    } 


    tbody {
        td {
            background-color: $color-row;
        }

        tr:hover { 
            td {
                background-color: $color-row-hover;
                border-top: $border-row-hover;
                border-bottom: $border-row-hover;
            }
            td:first-child {
                border-left: $border-row-hover;
            }
            td:last-child {
                border-right: $border-row-hover;
            }
        }    
    }
    
    tr { 
        height: $row-height-default;
    }
    &.compact {
        tbody > tr {
            height: $row-height-compact;
        }
    }
    &.short {
        tbody > tr {
            height: $row-height-short;
        }
    }
    &.tall {
        tbody > tr {
            height: $row-height-tall;
        }
    }
   
   

}


