// scss-lint:disable QualifyingElement, PropertyCount

.form-group + .form-group{
  margin-top: map-get($spacers, 4);
}

.form-label {
  display: block;
  max-width: $input-max-width;
  @include form-label-text();
}

.form-input{
  appearance: none;
  border: $outer-border;
  border-radius: $input-border-radius;
  color: $color-black; // standardize on firefox
  display: block;
  font-size: $input-font-size;
  line-height: $input-line-height;
  padding: $input-top-bottom-padding $input-left-right-padding;
  width: 100%;
  margin-top: map-get($spacers, 3);
  text-align: left;
  height: $input-standard-height;
}
textarea.form-input{
  height: 16rem;
}

//Note for select. Uses browser-specific styling for arrow. No custom.
.form-select{
  background-color: $color-white;
  border: $outer-border;
  border-radius: $input-border-radius;
  color: $color-black; // standardize on firefox
  display: block;
  font-size: $input-font-size;
  line-height: $input-line-height;
  height: $input-standard-height; //fixes bug in chrome where line-height is not respected.
  width: 100%;
  margin-top: $input-top-margin;
  text-align: left;
  padding: $input-top-bottom-padding $input-left-right-padding;

  // Remove dotted outline from select element on focus in Firefox
  &:-moz-focusring {
    color: transparent;
    text-shadow: 0 0 0 $color-black;
  }
}


legend {
  font-size: $h2-font-size;
  font-weight: $font-weight-bold;
}


//////////////////////
//** Input states **//
//////////////////////

.form-group.input-error {
  border-left: 4px solid $color-error;
  padding-top: map-get($spacers, 3);
  padding-left: calc(#{map-get($spacers, 4)} - 4px);
  padding-bottom: map-get($spacers, 3);

  .form-input,
  .form-select {
    border: $input-border-width-feedback solid $color-error;
    padding: $input-top-bottom-padding-feedback $input-left-right-padding-feedback;
  }

}
.input-error-message {
  @include form-label-text();
  display: block;
  color: $color-error;
}

.form-group.input-success {
  .form-input,
  .form-select {
    border: $input-border-width-feedback solid $color-success;
    padding: $input-top-bottom-padding-feedback $input-left-right-padding-feedback;
  }
}

.input-required:after {
  color: $color-required;
  content: ' (*required)';
}

.input-optional:after {
  color: $color-gray-medium-dark;
  content: ' (optional)';
}

// Hint text
.form-hint {
  @include body-copy-text;
  display: block;
  color: $color-gray-medium-dark;
}

/////////////////////////////////
// Custom checkboxes & radios
/////////////////////////////////
$checkbox-size: 18px;
$radio-size: 18px;

[type=checkbox],
[type=radio] {
  // The actual input element is only visible to screen readers, because
  // all visual styling is done via the label.
  @include sr-only();

  .lt-ie9 & {
    border: 0;
    float: left;
    margin: 0.4em 0.4em 0 0;
    position: static;
    width: auto;
  }
}

[type=checkbox] + label,
[type=radio] + label {
  cursor: pointer;
  font-weight: $font-weight-normal;
  line-height: $body-text-line-height;
  margin-bottom: 0;
  display: block;
  outline: none;
  color: $color-gray-dark;
}

//Outline for checkbox and radio
[type=checkbox] + label::before,
[type=radio] + label::before {
  content: '\a0';
  display: inline-block;
  background: $color-white;
  border-radius: $checkbox-border-radius;
  border: 2px solid $color-text;
  height: $checkbox-size;
  line-height: $body-text-line-height;
  margin-right: map-get($spacers, 3);
  width: $checkbox-size;
  position: relative;
  top: 4px;
}

//extra for radio outline
[type=radio] + label::before {
  border-radius: 100%;
  height: $radio-size;
  width: $radio-size;
}

//checked checkbox
[type=checkbox]:checked + label{
  position: relative;
  &:before{
    background-color: $color-text;
  }
  &:after{
    content: "";
    height: 7px;
    width: 12px;
    position: absolute;
    left: 3px;
    top: 5px;
    box-shadow: -2px 2px 0 0 #fff;
    transform: rotate(-46deg);
  }
}
//checked radio
[type=radio]:checked + label{
  position: relative;
  &:after{
    content: "";
    height: calc(#{$radio-size} - 10px);
    width: calc(#{$radio-size} - 10px);
    background-color: $color-text;
    position: absolute;
    left: 5px;
    top: 9px;
    border-radius: 100%;
  }
}

//Disable
[type=checkbox]:disabled + label,
[type=radio]:disabled + label {
  color: $color-gray-medium-light;
  cursor: not-allowed;
  &:before{
    border-color: $color-gray-light;
    background-color: $color-gray-pale;
  }
}

// checkbox focus
[type=checkbox]:focus + label::before, 
[type=checkbox].focus + label::before{
  outline: $focus-outline;
  outline-offset: $focus-spacing;
}
[type=radio]:focus + label::before, 
[type=radio].focus + label::before {
  box-shadow: 0 0 0 3px $color-focus;
}

/////////////////////////
// Range inputs
/////////////////////////
[type=range] {
  appearance: none;
  border: none;
  padding-left: 0;
  width: 100%;
}

[type=range]::-webkit-slider-runnable-track {
  background: $color-gray-light;
  border: 1px solid $color-gray-medium-dark;
  cursor: pointer;
  height: 1.2rem;
  width: 100%;
}

[type=range]::-moz-range-track {
  background: $color-primary;
  border: 1px solid $color-gray-medium-dark;
  cursor: pointer;
  height: 1.2rem;
  width: 100%;
}

[type=range]::-ms-track {
  background: transparent;
  color: transparent;
  cursor: pointer;
  height: 1.2rem;
  width: 100%;
}

[type=range]::-webkit-slider-thumb {
  -webkit-appearance: none;
  border: 1px solid $color-gray-medium-dark;
  height: 2.2rem;
  border-radius: 1.5rem;
  background: $color-gray-pale;
  cursor: pointer;
  margin-top: -.65rem;
  width: 2.2rem;
}

[type=range]::-moz-range-thumb {
  background: $color-gray-pale;
  border: 1px solid $color-gray-medium-dark;
  border-radius: 1.5rem;
  cursor: pointer;
  height: 2.2rem;
  width: 2.2rem;
}

[type=range]::-ms-thumb {
  background: $color-gray-pale;
  border: 1px solid $color-gray-medium-dark;
  border-radius: 1.5rem;
  cursor: pointer;
  height: 2.2rem;
  width: 2.2rem;
}

[type=range]::-ms-fill-lower {
  background: $color-gray-light;
  border: 1px solid $color-gray-medium-dark;
  border-radius: 2rem;
}

[type=range]::-ms-fill-upper {
  background: $color-gray-light;
  border: 1px solid $color-gray-medium-dark;
  border-radius: 2rem;
}

// Memorable dates

.date-group {
  display: flex;
  align-items: flex-end;
  label {
    margin-top: 0;
  }

  .form-group-day,
  .form-group-month,
  .form-group-year {
    margin-right: map-get($spacers, 4);
    margin-top: map-get($spacers, 3);

  }
  .form-group-day,
  .form-group-month,
  .form-group-year {
    width: calc(#{map-get($spacers, 4)} + #{map-get($spacers, 4)} + 4ch)
  }

  .icon-svg {
    margin-bottom: 8px;
    &.js-calendar-datepicker{
      &:hover{
        cursor: pointer;
      }
      &:focus{
        outline: $focus-outline;
      }
    }
  }
}


input[type='number'] {
  -moz-appearance:textfield !important;
}
//Below fix bug where date-inputs to number-wheels in chrome. 
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none !important;
}


.form-label + input[type=file]{
  margin-top: map-get($spacers, 3);
}


// Required
.required {
  color: $color-error;
}
